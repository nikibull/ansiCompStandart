
- name: Configure instance(s)
  hosts: webservers
  remote_user: vagrant
  become: true
  tasks:

      - name: Install aptitude using apt
        apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

      - name: Add Docker GPG key
        apt_key:
          url: https://download.docker.com/linux/ubuntu/gpg
          state: present

      - name: Install required system packages
        apt: name={{ item }} state=latest update_cache=yes
        loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']

      - name: Add Docker APT repository
        apt_repository:
          repo: deb [arch=amd64] https://download.docker.com/linux/{{ansible_distribution|lower}} {{ansible_distribution_release}} stable
          state: present

      - name: Update apt and install docker-ce
        apt: update_cache=yes name=docker-ce state=latest

      - name: Update apt and install docker-ce-cli
        apt: update_cache=yes name=docker-ce-cli state=latest

      - name: Update apt and install containerd.io
        apt: update_cache=yes name=containerd.io state=latest


      - name: Install Docker Module for Python
        pip:
          name: docker

      - name: Install Docker-compose
        shell: curl -L "https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        ignore_errors: yes

      - name: Ensure docker users are added to the docker group.
        user:
          name: vagrant
          groups: docker
          append: true

      - name: Copy prometheus.yml
        copy: src=files/prometheus.yml dest=/etc/prometheus/prometheus.yml

      - name: Copy compose
        copy: src=files/docker-compose.yml dest=/opt/docker-compose.yml

      - name: Run container
        shell:
          cmd: "docker-compose up -d"
          chdir: /opt/
